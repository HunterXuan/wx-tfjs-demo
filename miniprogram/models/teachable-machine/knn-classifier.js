"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var s=require("../../chunks/base_side_effects.js"),t=require("./util.js"),a=require("../../chunks/norm.js");class e{constructor(){this.classDatasetMatrices={},this.classExampleCount={},this.labelToClassId={},this.nextClassId=0}addExample(t,e){if(null==this.exampleShape&&(this.exampleShape=t.shape),!s.arraysEqual(this.exampleShape,t.shape))throw new Error(`Example shape provided, ${t.shape} does not match previously provided example shapes ${this.exampleShape}.`);this.clearTrainDatasetMatrix(),e in this.labelToClassId||(this.labelToClassId[e]=this.nextClassId++),a.tidy((()=>{const i=this.normalizeVectorToUnitLength(a.reshape(t,[t.size])),l=i.shape[0];if(null==this.classDatasetMatrices[e])this.classDatasetMatrices[e]=a.reshape(i,[1,l]);else{const t=s.concat([a.reshape(this.classDatasetMatrices[e],[this.classExampleCount[e],l]),a.reshape(i,[1,l])],0);this.classDatasetMatrices[e].dispose(),this.classDatasetMatrices[e]=t}a.keep(this.classDatasetMatrices[e]),null==this.classExampleCount[e]&&(this.classExampleCount[e]=0),this.classExampleCount[e]++}))}similarities(s){return a.tidy((()=>{const e=this.normalizeVectorToUnitLength(a.reshape(s,[s.size])),i=e.shape[0];if(null==this.trainDatasetMatrix){let s=null;for(const a in this.classDatasetMatrices)s=t.concatWithNulls(s,this.classDatasetMatrices[a]);this.trainDatasetMatrix=s}if(null==this.trainDatasetMatrix)return console.warn("Cannot predict without providing training examples."),null;a.keep(this.trainDatasetMatrix);const l=this.getNumExamples();return a.reshape(a.matMul(a.reshape(this.trainDatasetMatrix,[l,i]),a.reshape(e,[i,1])),[l])}))}async predictClass(e,i=3){if(i<1)throw new Error("Please provide a positive integer k value to predictClass.");if(0===this.getNumExamples())throw new Error("You have not added any examples to the KNN classifier. Please add examples before calling predictClass.");const l=a.tidy((()=>s.cast(this.similarities(e),"float32"))),r=Math.min(i,this.getNumExamples()),n=t.topK(await l.data(),r).indices;return l.dispose(),this.calculateTopClass(n,r)}clearClass(s){if(null==this.classDatasetMatrices[s])throw new Error(`Cannot clear invalid class ${s}`);this.classDatasetMatrices[s].dispose(),delete this.classDatasetMatrices[s],delete this.classExampleCount[s],this.clearTrainDatasetMatrix()}clearAllClasses(){for(const s in this.classDatasetMatrices)this.clearClass(s)}getClassExampleCount(){return this.classExampleCount}getClassifierDataset(){return this.classDatasetMatrices}getNumClasses(){return Object.keys(this.classExampleCount).length}setClassifierDataset(s){this.clearTrainDatasetMatrix(),this.classDatasetMatrices=s;for(const t in s)this.classExampleCount[t]=s[t].shape[0]}calculateTopClass(s,t){let a;const e={};if(null==s)return{classIndex:this.labelToClassId[a],label:a,confidences:e};const i={};let l=0;for(const s in this.classDatasetMatrices)l+=this.classExampleCount[s],i[s]=l;const r={};for(const s in this.classDatasetMatrices)r[s]=0;for(let t=0;t<s.length;t++){const a=s[t];for(const s in this.classDatasetMatrices)if(a<i[s]){r[s]++;break}}let n=0;for(const s in this.classDatasetMatrices){const i=r[s]/t;i>n&&(n=i,a=s),e[s]=i}return{classIndex:this.labelToClassId[a],label:a,confidences:e}}clearTrainDatasetMatrix(){null!=this.trainDatasetMatrix&&(this.trainDatasetMatrix.dispose(),this.trainDatasetMatrix=null)}normalizeVectorToUnitLength(s){return a.tidy((()=>{const t=a.norm(s);return a.div(s,t)}))}getNumExamples(){let s=0;for(const t in this.classDatasetMatrices)s+=this.classExampleCount[t];return s}dispose(){this.clearTrainDatasetMatrix();for(const s in this.classDatasetMatrices)this.classDatasetMatrices[s].dispose()}}exports.KNNClassifier=e,exports.create=function(){return new e};
